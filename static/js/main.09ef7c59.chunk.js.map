{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","components/login/LoginScreen.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/marvel/MarvelScreen.js","components/ui/NavBar.js","components/dc/DcScreen.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/search/SearchScreen.js","selectors/getHeroesByName.js","hooks/useForm.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","LoginScreen","history","dispatch","useContext","lastPatch","localStorage","getItem","className","onClick","name","replace","heroes","HeroCard","id","superhero","alter_ego","first_appearance","characters","style","maxWidth","src","alt","to","HeroList","publisher","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","MarvelScreen","Navbar","user","useHistory","activeClassName","exact","DcScreen","HeroScreen","heroeId","useParams","find","getHeroById","length","push","goBack","SearchScreen","location","useLocation","queryString","parse","search","q","initialState","useState","formValue","setFormValue","target","value","useForm","searchText","formValues","handleInputChange","heroesFilter","toLocaleLowerCase","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","setItem","pathname","props","prototype","PropTypes","bool","isRequired","func","PublicRoute","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09ef7c59.chunk.js","sourcesContent":["import React, { createContext } from 'react'\n\nexport const AuthContext = createContext();\n\n","\nexport const types = {\n\n    login: '[auth] login',\n    loggout: '[auth] loggout',\n\n}","import { types } from \"../types/types\";\n\nexport const authReducer = (state = {}, action ) => {\n    switch (action.type) {\n        case types.login:\n            return{\n                ...action.payload,\n                logged:true\n            }\n        case types.loggout:\n            return{\n                logged:false\n            }\n    \n        default:\n            return state;\n    }\n}","import React, { useContext } from 'react';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nexport const LoginScreen = ({ history }) => {\n    const {dispatch} = useContext(AuthContext);\n    const lastPatch = localStorage.getItem('lastPath') || '/';\n    const handleClick = () => {\n        // history.push('/marvel') \n        // history.replace('/marvel')\n        dispatch({\n            type: types.login,\n            payload: {\n                name:'pepe'\n            }\n        });\n\n        history.replace(lastPatch);\n\n    }\n    return (\n        <div className=\"container mt-5\">\n            <h1>LoginScreen</h1>\n            <hr />\n\n            <button\n                className=\"btn btn-primary\"\n                onClick={ handleClick }\n            >\n                Login\n            </button>\n        </div>\n    )\n}\n","export const heroes = [\n    {\n        'id': 'dc-batman',\n        'superhero':'Batman', \n        'publisher':'DC Comics', \n        'alter_ego':'Bruce Wayne',\n        'first_appearance':'Detective Comics #27',\n        'characters':'Bruce Wayne'\n    },\n    {\n        'id': 'dc-superman',\n        'superhero':'Superman', \n        'publisher':'DC Comics', \n        'alter_ego':'Kal-El',\n        'first_appearance':'Action Comics #1',\n        'characters':'Kal-El'\n    },\n    {\n        'id': 'dc-flash',\n        'superhero':'Flash', \n        'publisher':'DC Comics', \n        'alter_ego':'Jay Garrick',\n        'first_appearance':'Flash Comics #1',\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\n    },\n    {\n        'id': 'dc-green',\n        'superhero':'Green Lantern', \n        'publisher':'DC Comics', \n        'alter_ego':'Alan Scott',\n        'first_appearance':'All-American Comics #16',\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\n    },\n    {\n        'id': 'dc-arrow',\n        'superhero':'Green Arrow', \n        'publisher':'DC Comics', \n        'alter_ego':'Oliver Queen',\n        'first_appearance':'More Fun Comics #73',\n        'characters':'Oliver Queen'\n    },\n    {\n        'id': 'dc-wonder',\n        'superhero':'Wonder Woman', \n        'publisher':'DC Comics', \n        'alter_ego':'Princess Diana',\n        'first_appearance':'All Star Comics #8',\n        'characters':'Princess Diana'\n    },\n    {\n        'id': 'dc-martian',\n        'superhero':'Martian Manhunter', \n        'publisher':'DC Comics', \n        'alter_ego':'J\\'onn J\\'onzz',\n        'first_appearance':'Detective Comics #225',\n        'characters':'Martian Manhunter'\n    },\n    {\n        'id': 'dc-robin',\n        'superhero':'Robin/Nightwing', \n        'publisher':'DC Comics', \n        'alter_ego':'Dick Grayson',\n        'first_appearance':'Detective Comics #38',\n        'characters':'Dick Grayson'\n    },\n    {\n        'id': 'dc-blue',\n        'superhero':'Blue Beetle', \n        'publisher':'DC Comics', \n        'alter_ego':'Dan Garret',\n        'first_appearance':'Mystery Men Comics #1',\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\n    },\n    {\n        'id': 'dc-black',\n        'superhero':'Black Canary', \n        'publisher':'DC Comics', \n        'alter_ego':'Dinah Drake',\n        'first_appearance':'Flash Comics #86',\n        'characters':'Dinah Drake, Dinah Lance'\n    },\n    {\n        'id': 'marvel-spider',\n        'superhero':'Spider Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Peter Parker',\n        'first_appearance':'Amazing Fantasy #15',\n        'characters':'Peter Parker'\n    },\n    {\n        'id': 'marvel-captain',\n        'superhero':'Captain America', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Steve Rogers',\n        'first_appearance':'Captain America Comics #1',\n        'characters':'Steve Rogers'\n    },\n    {\n        'id': 'marvel-iron',\n        'superhero':'Iron Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Tony Stark',\n        'first_appearance':'Tales of Suspense #39',\n        'characters':'Tony Stark'\n    },\n    {\n        'id': 'marvel-thor',\n        'superhero':'Thor', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Thor Odinson',\n        'first_appearance':'Journey into Myster #83',\n        'characters':'Thor Odinson'\n    },\n    {\n        'id': 'marvel-hulk',\n        'superhero':'Hulk', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Bruce Banner',\n        'first_appearance':'The Incredible Hulk #1',\n        'characters':'Bruce Banner'\n    },\n    {\n        'id': 'marvel-wolverine',\n        'superhero':'Wolverine', \n        'publisher':'Marvel Comics', \n        'alter_ego':'James Howlett',\n        'first_appearance':'The Incredible Hulk #180',\n        'characters':'James Howlett'\n    },\n    {\n        'id': 'marvel-daredevil',\n        'superhero':'Daredevil', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Matthew Michael Murdock',\n        'first_appearance':'Daredevil #1',\n        'characters':'Matthew Michael Murdock'\n    },\n    {\n        'id': 'marvel-hawkeye',\n        'superhero':'Hawkeye', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Clinton Francis Barton',\n        'first_appearance':'Tales of Suspense #57',\n        'characters':'Clinton Francis Barton'\n    },\n    {\n        'id': 'marvel-cyclops',\n        'superhero':'Cyclops', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Scott Summers',\n        'first_appearance':'X-Men #1',\n        'characters':'Scott Summers'\n    },\n    {\n        'id': 'marvel-silver',\n        'superhero':'Silver Surfer', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Norrin Radd',\n        'first_appearance':'The Fantastic Four #48',\n        'characters':'Norrin Radd'\n    }\n]","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const HeroCard = ({\n  id,\n  superhero,\n  alter_ego,\n  first_appearance,\n  characters,\n}) => {\n  return (\n    <div>\n      <div className=\"card ms-3 animate__animated animate__backInRight\" style={ { maxWidth: 540} }>\n        <div className=\"row no-gutters\">\n          <div className=\"col-md-4 mx-auto text-center\">\n            <img\n              src={`./assets/heroes/${id}.jpg`}\n              alt=\"...\"\n              className=\"img-thumbnail mx-auto d-block\"\n            />\n            \n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{superhero}</h5>\n              <p className=\"card-text\">{alter_ego}</p>\n              {\n                  (alter_ego !== characters)\n                  && <p className=\"card-text\" >{ characters }</p>\n              }\n                 <p className=\"text-muted\">{first_appearance}</p>\n\n                 <Link to={`./hero/${id}`} className=\"btn btn-info\">\n                        Más...\n                 </Link>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useMemo } from 'react'\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\nimport { HeroCard } from './HeroCard';\n\nexport const HeroList = ({publisher}) => {\n    const heroes = useMemo(() => getHeroesByPublisher(publisher), [ publisher ]);\n\n    return (\n        <div className=\"card-columns animate__animated animate__fadeIn\">\n            {\n                heroes.map(hero => (\n                    <HeroCard key={hero.id} \n                    {...hero}\n                    />\n                ))\n            }\n        </div>\n    )\n}\n","import { heroes } from '../data/heroes'\n\nexport const getHeroesByPublisher = ( publisher ) => {\n\n    const validPublishers = ['DC Comics','Marvel Comics'];\n\n    if( !validPublishers.includes(publisher)){\n        throw new Error(`Publisher \"${publisher}\" no es correcto`);\n    }\n\n    return heroes.filter(hero => hero.publisher === publisher);\n        \n}","import React from 'react'\nimport { HeroList } from '../heroes/HeroList'\n\nexport const MarvelScreen = () => {\n    return (\n        <div>\n            <h1>Marvel Screen</h1>\n            <HeroList publisher={'Marvel Comics'}/>\n        </div>\n    )\n}\n","import React, { useContext } from 'react';\nimport { Link, NavLink, useHistory } from 'react-router-dom';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nexport const Navbar = () => {\n   const {user:{name},dispatch} = useContext(AuthContext);\n   const history = useHistory();\n   const handleLogout = () => {\n    history.replace('/login');\n\n    dispatch({\n        type: types.loggout\n    });\n\n   }\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            \n            <Link \n                className=\"navbar-brand\" \n                to=\"/\"\n            >\n                Asociaciones\n            </Link>\n\n            <div className=\"navbar-collapse\">\n                <div className=\"navbar-nav\">\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/marvel\"\n                    >\n                        Marvel\n                    </NavLink>\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/dc\"\n                    >\n                        DC\n                    </NavLink>\n\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/search\"\n                    >\n                        Search\n                    </NavLink>\n                </div>\n            </div>\n\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n                <ul className=\"navbar-nav ml-auto\">\n\n                    <span className=\"nav-item nav-link text-info\">\n                        {name}\n                    </span>\n                    <button \n                        className=\"nav-item nav-link btn btn-info\"\n                        onClick={ handleLogout }\n                    >\n                        Logout\n                    </button>\n                </ul>\n            </div>\n        </nav>\n    )\n}","import React from 'react'\nimport { HeroList } from '../heroes/HeroList'\n\nexport const DcScreen = () => {\n    return (\n        <div>\n            <h1>DC Screen</h1>\n            <HeroList publisher={'DC Comics'}/>\n\n        </div>\n    )\n}\n","import React, { useMemo } from \"react\";\nimport { Redirect, useParams } from \"react-router\";\nimport { getHeroById } from \"../../selectors/getHeroById\";\n\nexport const HeroScreen = ({history}) => {\n  const { heroeId } = useParams();\n\n  const hero = useMemo(() => getHeroById(heroeId), [ heroeId ]);\n\n  if (!hero) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const {\n    id,\n    superhero,\n    publisher,\n    alter_ego,\n    first_appearance,\n    characters,\n  } = hero;\n\n  const handleReturn = () =>{\n    \n    if(history.length <=2 ){\n        history.push('/');\n    }else{\n        history.goBack();\n    }\n  }\n\n  return (\n    <div className=\"row mt-5\">\n      <div className=\"col-4\">\n        <img\n          src={`../assets/heroes/${id}.jpg`}\n          alt={superhero}\n          className=\"img-thumbnail animate__animated animate__fadeInLeft\"\n        />\n      </div>\n      \n      <div className=\"col-8 animate__animated animate__fadeInRightBig\">\n         <h3>{superhero}</h3>\n             <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item\"> <b>Alter ego:</b> {alter_ego} </li>\n                <li className=\"list-group-item\"> <b>Publisher:</b> {publisher} </li>\n                <li className=\"list-group-item\"> <b>First apparence:</b> {first_appearance} </li>\n              </ul>\n\n              <h5 className=\"mt-2\"> Characters </h5>\n\n\n\n              <button \n                className=\"btn btn-outline-info mt-2\"\n                onClick={ handleReturn }\n              \n              >\n                  Return\n              </button>\n        </div>\n    </div>\n  );\n};\n","import { heroes } from '../data/heroes'\n\nexport const getHeroById = (id) => {\n\n    return heroes.find(hero => hero.id === id);\n}\n","import React from 'react'\nimport queryString from \"query-string\";\nimport { useForm } from '../../hooks/useForm';\nimport { HeroCard } from '../heroes/HeroCard';\nimport { useLocation } from 'react-router-dom';\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\n\n\n\nexport const SearchScreen = ({ history }) => {\n    const location = useLocation();\n    const {q = ''} =  queryString.parse(location.search);\n\n    const  [ formValues, handleInputChange]  = useForm({\n        searchText: q\n    });\n    \n    const { searchText } = formValues\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        history.push(`?q=${searchText}`);\n    }\n\n    const heroesFilter = getHeroesByName( searchText );\n\n    return (\n        <div>\n            <h1>Search Screen</h1>\n            <hr />\n\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <h4> Search Form </h4>\n                    <hr />\n\n                    <form onSubmit={ handleSubmit }>\n                        <input \n                            type=\"text\"\n                            placeholder=\"Find your hero\"\n                            className=\"form-control\"\n                            name=\"searchText\"\n                            value={searchText}\n                            autoComplete='off'\n                            onChange={handleInputChange}\n                        />\n\n                        <button\n                            type=\"submit\"\n                            className=\"btn m-1 btn-block btn-outline-primary\"\n                        >\n                            Search...\n                        </button>\n                    </form>\n                \n                </div>\n\n                <div className=\"col-7\">\n                    <h4> Results </h4>\n                    <hr />\n\n                    {\n                        heroesFilter.map(hero => (\n                            <HeroCard \n                                key={hero.id}\n                                {...hero}\n                            />\n                        ))\n                    }\n\n                </div>\n\n            </div>\n            \n        </div>\n    )\n}\n","import { heroes } from '../data/heroes'\n\nexport const getHeroesByName = ( name ) => {\n    if(name === ''){\n        return [];\n    }\n    \n    name = name.toLocaleLowerCase();\n    return heroes.filter(hero => hero.superhero.toLocaleLowerCase().includes(name));\n        \n}","import {useState} from \"react\";\n\nexport const useForm = ( initialState = {} ) => {\n\n    const [formValue, setFormValue] = useState(initialState)\n\n    const reset = () => {\n      setFormValue(initialState);\n    }\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValue({\n          ...formValue,\n          [target.name]: target.value,\n        });\n      };\n\n      return [formValue, handleInputChange, reset];\n\n}","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router'\nimport { DcScreen } from '../components/dc/DcScreen'\nimport { HeroScreen } from '../components/heroes/HeroScreen'\nimport { MarvelScreen } from '../components/marvel/MarvelScreen'\nimport { SearchScreen } from '../components/search/SearchScreen'\nimport { Navbar } from '../components/ui/NavBar'\n\nexport const DashboardRoutes = () => {\n    return (\n        <>\n            \n            <Navbar />\n            <div className=\"container mt-2\">\n\n                <Switch>\n\n                    <Route exact path=\"/marvel\" component={MarvelScreen} />\n                    <Route exact path=\"/hero/:heroeId\" component={HeroScreen} />\n                    <Route exact path=\"/dc\" component={DcScreen} />\n                    <Route exact path=\"/search\" component={SearchScreen} />\n\n                    <Redirect to=\"/marvel\" />\n                </Switch>\n\n            </div>\n\n\n        </>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router'\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component:Component,\n    ...rest\n}) => {\n\n    localStorage.setItem('lastPath',rest.location.pathname)\n\n    return (\n        <Route  { ...rest }\n            component={ (props) => ( \n                (isAuthenticated)? \n                <Component {...props} />\n                :\n                <Redirect to=\"/login\" />\n            )}\n        />\n    )\n}\n\n\nPrivateRoute.prototype = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router'\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component:Component,\n    ...rest\n}) => {\n\n    return (\n        <Route  { ...rest }\n            component={ (props) => ( \n                (!isAuthenticated)? \n                <Component {...props} />\n                :\n                <Redirect to=\"/\" />\n            )}\n        />\n    )\n}\n\n\nPublicRoute.prototype = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useContext } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { AuthContext } from \"../auth/AuthContext\";\nimport { LoginScreen } from \"../components/login/LoginScreen\";\nimport { MarvelScreen } from \"../components/marvel/MarvelScreen\";\nimport { Navbar } from \"../components/ui/NavBar\";\nimport { DashboardRoutes } from \"./DashboardRoutes\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { PublicRoute } from \"./PublicRoute\";\n\nexport const AppRouter = () => {\n\n  const {user} = useContext(AuthContext)\n\n  return (\n    <Router>\n      <div>\n        {/* <Navbar /> */}\n\n        <Switch>\n          <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={user.logged} />\n          <PrivateRoute path=\"/\" component={DashboardRoutes} isAuthenticated={user.logged} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import React, { useEffect, useReducer } from 'react'\nimport { AuthContext } from './auth/AuthContext'\nimport { authReducer } from './auth/authReducer';\nimport { AppRouter } from './routers/AppRouter'\n\nconst init = () => {\n    return JSON.parse(localStorage.getItem('user')) || {logged:false};\n}\n\nexport const HeroesApp = () => {\n\n    const [user, dispatch] = useReducer(authReducer, {}, init);\n\n    useEffect(() => {\n        localStorage.setItem('user',JSON.stringify(user));\n    }, [user])\n    return (\n        <AuthContext.Provider value={{ user,dispatch }}>\n            <AppRouter />\n        </AuthContext.Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\nimport './styles/style.css'\nReactDOM.render(\n \n    <HeroesApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}